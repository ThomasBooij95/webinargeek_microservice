# Welcome to the WebinarGeek API Documentation

Welcome to the API documentation for WebinarGeek's broadcast listing service, powered by FastAPI. This API allows you to fetch information about available broadcasts efficiently, leveraging the power of caching for optimized performance.

## Key Features

- **Fast and Modern**: Built with FastAPI, one of the fastest Python frameworks, ensuring high performance and low latency.
- **Flexible Endpoints**: Retrieve broadcast data using optional query parameters, making it easy to get the information you need.
- **Efficient Caching**: Utilizes caching to reduce load times and improve user experience by storing responses for 15 minutes.

## Getting Started

Our API is designed to be straightforward and intuitive. Hereâ€™s a brief overview to get you started:

### Base URL

The base URL for accessing the API is:
stresslessdogs.booijanalytics.nl/

### Endpoints

#### List Available Broadcasts

Fetches information about available broadcasts. You can optionally specify a `webinar_id` to get data for a specific webinar.

- **URL**: `/list_broadcasts/`
- **Method**: `GET`
- **Query Parameters**:
  - `webinar_id` (optional, integer): The ID of the webinar to fetch broadcasts for.

##### Example Requests

1. **Fetch all broadcasts**:
GET /list_broadcasts/


2. **Fetch broadcasts for a specific webinar**:
GET /list_broadcasts/?webinar_id=123



##### Response

The response will be a JSON object containing the broadcast data. If a `webinar_id` is provided, the data will pertain to that specific webinar. Otherwise, it will return default broadcast data.

```json
{
"data": "Broadcast data",
"webinar_id": 123  // if applicable
}
